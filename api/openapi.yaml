openapi: 3.0.0
info:
  title: E-learning API
  description: E-learning API
  contact:
    email: 6anandkumar@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://localhost:8080/
  description: LocalHost
tags:
- name: course
  description: Everything about courses
- name: user
  description: Operations about users
- name: catalog
  description: Access to catalog
- name: Auth
  description: Get Auth Token
paths:
  /course:
    post:
      tags:
      - course
      summary: Add a new course to the catalog
      operationId: addCourse
      requestBody:
        $ref: '#/components/requestBodies/Course'
      responses:
        "403":
          description: Invalid API Token
        "405":
          description: Invalid input
      security:
      - JWT: []
      x-swagger-router-controller: Course
  /course/{courseId}:
    get:
      tags:
      - course
      summary: Find course by ID
      description: Returns a single course
      operationId: getCourseById
      parameters:
      - name: courseId
        in: path
        description: eg. 1,2,3,4
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        "400":
          description: Invalid ID supplied
        "404":
          description: Course not found
      x-swagger-router-controller: Course
    put:
      tags:
      - course
      summary: Updates a course in the catalog with new data
      operationId: updateCourse
      parameters:
      - name: courseId
        in: path
        description: ID of course that needs to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        $ref: '#/components/requestBodies/Course'
      responses:
        "403":
          description: Invalid API Token
        "405":
          description: Invalid input
      security:
      - JWT: []
      x-swagger-router-controller: Course
    delete:
      tags:
      - course
      summary: Deletes a course
      operationId: deleteCourse
      parameters:
      - name: courseId
        in: path
        description: Course id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid ID supplied
        "403":
          description: Invalid API Token
        "404":
          description: Course not found
      security:
      - JWT: []
      x-swagger-router-controller: Course
  /user:
    post:
      tags:
      - user
      summary: Create user
      description: Create new user.
      operationId: addUser
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        "403":
          description: Invalid API Token
        default:
          description: successful operation
      security:
      - JWT: []
      x-swagger-router-controller: User
  /user/{username}:
    get:
      tags:
      - user
      summary: Get user by user name
      operationId: getUserByName
      parameters:
      - name: username
        in: path
        description: The name that needs to be fetched. Use user1 for testing.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      x-swagger-router-controller: User
    put:
      tags:
      - user
      summary: Updated user
      description: Update existing user.
      operationId: updateUser
      parameters:
      - name: username
        in: path
        description: name that need to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "400":
          description: Invalid user supplied
        "403":
          description: Invalid API Token
        "404":
          description: User not found
      security:
      - JWT: []
      x-swagger-router-controller: User
    delete:
      tags:
      - user
      summary: Delete user
      description: Delete user.
      operationId: deleteUser
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid username supplied
        "403":
          description: Invalid API Token
        "404":
          description: User not found
      security:
      - JWT: []
      x-swagger-router-controller: User
  /catalog/inventory:
    get:
      tags:
      - catalog
      summary: Returns course inventories by categories
      description: Returns a map of categories to quantities
      operationId: getInventory
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
      x-swagger-router-controller: Catalog
  /catalog/category/{category}:
    get:
      tags:
      - catalog
      summary: get courses based on categories
      description: filter courses based on category
      operationId: getCourseByCategory
      parameters:
      - name: category
        in: path
        description: eg. CS, ECE
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        "400":
          description: Invalid category supplied
        "404":
          description: Category not found
      x-swagger-router-controller: Catalog
  /catalog/instructor/{instructor}:
    get:
      tags:
      - catalog
      summary: get courses based on instructor
      description: filter courses by instructor
      operationId: getCourseByInstructor
      parameters:
      - name: instructor
        in: path
        description: eg. IV
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        "400":
          description: Invalid category supplied
        "404":
          description: Category not found
      x-swagger-router-controller: Catalog
  /auth/gettoken:
    get:
      tags:
      - Auth
      summary: get auth token
      description: get auth token
      operationId: getToken
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "404":
          description: Token not found
      x-swagger-router-controller: Auth
components:
  schemas:
    Course:
      required:
      - category
      - code
      - courseId
      - instructor
      - name
      type: object
      properties:
        courseId:
          type: integer
          format: int64
        name:
          type: string
        code:
          type: string
        category:
          type: string
        instructor:
          type: string
      example:
        code: code
        instructor: instructor
        name: name
        category: category
        courseId: 0
    User:
      required:
      - email
      - firstName
      - lastName
      - username
      - utype
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        utype:
          type: string
      example:
        firstName: firstName
        lastName: lastName
        utype: utype
        id: 0
        email: email
        username: username
    Catalog:
      type: array
      items:
        $ref: '#/components/schemas/Course'
  requestBodies:
    Course:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Course'
      required: true
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      required: true
  securitySchemes:
    JWT:
      description: "JWT Based Auth Token"
      type: http
      scheme: bearer
      bearerFormat: JWT
